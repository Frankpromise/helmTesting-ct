name: Lint and Test Helm Charts
permissions:
      contents: read
      packages: write
on:
  pull_request:
  push:
    branches:
      - master  # Trigger for push to the 'master' branch (including merges)

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Pass GITHUB_TOKEN to the setup-helm action

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Chart Testing Tool
        uses: helm/chart-testing-action@v2.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure chart-testing-action has access to GITHUB_TOKEN

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Always Lint Charts (Regardless of Changes)
        run: ct lint --config ct.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure linting steps have the GITHUB_TOKEN

      - name: Lint Changed Charts (Only if Changes Detected)
        if: env.changed == 'true'
        run: ct lint --config ct.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure linting for changed charts has the GITHUB_TOKEN

  push-helm-image:
    runs-on: ubuntu-latest
    needs: lint-test  # Ensure this job runs after lint-test job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username "${{ github.actor }}" --password

      - name: Set Repository Name in Lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Generate Short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-4)" >> $GITHUB_ENV

      - name: Package Helm Chart
        run: helm package ./generic-chart --destination .

      - name: Push Helm Chart to GHCR
        run: |
          helm push generic-chart-*.tgz oci://ghcr.io/frankpromise/helmtesting-ct
