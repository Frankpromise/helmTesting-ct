name: Lint and Test Helm Charts
permissions:
      contents: read
      packages: write
on:
  pull_request:
  push:
    branches:
      - master  # Trigger for push to the 'master' branch (including merges)

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Run Helm Lint
        run: |
          # Run helm lint on your chart directory
          helm lint ./generic-chart
  semantic-release:
    needs: lint-test
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Run Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push-helm-image:
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Repository Name (Lowercase)
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Use Semantic Release Version
        run: echo "CHART_VERSION=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_ENV

      - name: Package Helm Chart with Semantic Version
        run: helm package ./generic-chart --version ${{ env.CHART_VERSION }}

      - name: Push Helm Chart as OCI Image
        run: |
          helm push generic-chart-${{ env.CHART_VERSION }}.tgz oci://ghcr.io/${{ env.REPO_NAME }}/generic-chart
